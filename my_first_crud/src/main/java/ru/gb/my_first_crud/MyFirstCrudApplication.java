package ru.gb.my_first_crud;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class MyFirstCrudApplication {
    /**
     * Базовое задание:
     * <p>
     * 1. Создание базового веб-приложения Spring MVC
     * <p>
     * Начните с создания простого веб-приложения с использованием Spring MVC. Это может быть простой сайт, который выводит "Привет, мир!" на главной странице. Используйте аннотацию @Controller и @RequestMapping для маршрутизации запросов на эту страницу.
     * <p>
     * 2. Добавление Thymeleaf в проект
     * <p>
     * Добавьте Thymeleaf в свое веб-приложение Spring MVC. Создайте простую страницу с некоторыми переменными, которые заполняются с помощью модели Spring MVC и отображаются на странице с использованием Thymeleaf.
     * <p>
     * 3. Создание формы ввода и обработка данных формы
     * <p>
     * Создайте страницу с формой ввода, используя Thymeleaf для рендеринга формы. Затем создайте контроллер Spring MVC, который обрабатывает отправку формы и выводит полученные данные. Это может быть форма для регистрации или любая другая форма, которая собирает информацию от пользователя.
     * <p>
     * (Не обязательно) Добавить в HTML в теге <style> простой css код. Например, изменить цвет заголовков, стиль таблицы или обернуть форму в рамочку
     * <p>
     * Все необходимые примеры кода для этого задания мы разбирали на семинаре.
     * <p>
     * Задание со звездочкой:
     * <p>
     * Проект домашнего задания для 2 семинара (CRUD приложение USER SERVICE) переписать:
     * <p>
     * 1. Использовать библиотеку Lomboc:
     * <p>
     * a) @Data - для полей классов
     * <p>
     * b) @AllArgsConstructor - для классов с конструкторами
     * <p>
     * c) @Log - логировать работу всех контроллеров
     * <p>
     * 2. Использовать configuration-processor для работы с настройками приложения:
     * <p>
     * a) Создать объект инкапсулирующий шаблоны запросов к базе данных H2
     * <p>
     * b) Использовать аннотации @ConfigurationProperties и @ConfigurationPropertiesScan для заполнения полей этого класса
     * <p>
     * с) Вынести все SQL шаблоны в настройки приложения.
     * <p>
     *
     * @param args
     */
    public static void main(String[] args) {
        SpringApplication.run(MyFirstCrudApplication.class, args);
    }
}
